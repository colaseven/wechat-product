<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
       default-lazy-init="true">

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 设置hibernate方言 可以使用java类动态生成 -->
        <property name="persistenceUnitName" value="unitBase"></property>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapterBase"/>
        <property name="packagesToScan" value="com.caad.wechat.entity"/>
        <property name="jpaProperties">
            <props>
                <!-- 命名规则 My_NAME->MyName -->
                <!-- <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
                <!-- 配置hibernate的属性 如果使用log4jdbc这个就不起作用 -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 默认为none；慎重作临时调整，一定要预先核对jdbc.properties确认无误后再做临时调整。 -->
            </props>
        </property>
    </bean>

    <!-- <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </bean> -->
    <bean id="hibernateJpaVendorAdapterBase" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="com.caadt.cln.common.persistence.Hibernates">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
    </bean>

    <!-- 使用配置文件加载数据库配置 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/jdbc.properties"/>
    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="dataSource" class="com.caadt.cln.dal.encrypted.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${base.driverClassName}"/>
        <property name="url" value="${base.url}"/>
        <property name="username" value="${base.username}"/>
        <property name="password" value="${base.password}"/>
        <property name="passwordEncrypted" value="${base.passwordEncrypted}"/>
        <property name="initialSize" value="${base.initialSize}"/>
        <property name="maxActive" value="${base.maxActive}"/>
        <property name="minIdle" value="${base.minIdle}"/>
        <property name="testOnBorrow" value="${base.testOnBorrow}"/>
        <property name="testWhileIdle" value="${base.testWhileIdle}"/>
        <property name="validationQuery" value="${base.validationQuery}"/>
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.caad.wechat.dao" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <qualifier value="baseEM"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>